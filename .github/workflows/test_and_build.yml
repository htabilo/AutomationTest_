# Flujo de trabajo para automatización de pruebas de QA con Selenium
name: QA Automation con Selenium

# Se activa con cada 'push' o 'pull request' en la rama principal.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Permite ejecutar el flujo de trabajo manualmente desde la interfaz de GitHub.
  workflow_dispatch:

# Un 'job' es una unidad de trabajo que se ejecuta en el 'runner'.
jobs:
  run-selenium-tests:
    # Se ejecuta en el entorno virtual más reciente de Ubuntu.
    runs-on: ubuntu-latest

    # Pasos del job
    steps:
      # 1. Clona el repositorio.
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python.
      - name: Configurar Python
        uses: actions/setup-python@v5 # Se recomienda la última versión estable (v5)
        with:
          python-version: '3.10'

      # 3. Instala las dependencias listadas en requirements.txt.
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # PASO ADICIONAL: Instala el navegador Chrome en el runner de GitHub Actions.
      # Este paso es crucial para que Selenium pueda encontrar y usar el navegador.
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
          
      # 4. Ejecuta el script de Selenium.
      # Reemplaza 'nombre_de_tu_script.py' con el nombre de tu archivo.
      # La captura de pantalla que me enviaste indicaba que el archivo se llama "AutomacionTest.py".
      - name: Ejecutar pruebas de automatización
        run: |
          python Archivo.py

